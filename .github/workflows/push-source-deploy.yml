name: Source Deploy

on:
  push:
    branches: [main, uat, sit]
    paths:
      - 'force-app/**'

env:
  CI_COMMIT_SHA: ${{ github.sha }}
  CI_COMMIT_BRANCH: ${{ github.ref_name	 }}
  TEST_LEVEL: ${{ vars.TEST_LEVEL }}
  SFDX_AUTH_URL_MAIN: ${{ secrets.SFDX_AUTH_URL_MAIN }}
  SFDX_AUTH_URL_UAT: ${{ secrets.SFDX_AUTH_URL_UAT }}
  SFDX_AUTH_URL_SIT: ${{ secrets.SFDX_AUTH_URL_SIT }}
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  Deploy:
    runs-on: ubuntu-latest
    container: bitmist/cicd:latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4
      - name: 'Git fetch tags'
        run: |
          git config --global --add safe.directory /__w/$REPO_NAME/$REPO_NAME
          git fetch --prune --unshallow
      - name: 'Install sfdx-git-delta plugin'
        run: echo y | sfdx plugins:install sfdx-git-delta
      - name: 'Create delta packages for new, modified or deleted metadata'
        run: |
          regexToMatch="tag-${CI_COMMIT_BRANCH}_deploy*"
          echo regexToMatch $regexToMatch
          
          lastTag=$(git describe --tags --abbrev=0 --match "$regexToMatch") || true
          echo lastTag $lastTag
          
          if [ -z "$lastTag" ]; then
             oldestCommit=$(git rev-list --max-parents=0 HEAD | tail -n 1)
             lastCommit=$oldestCommit
          else
             lastCommit=$(git rev-list -n 1 $lastTag)
          fi
          echo lastCommit $lastCommit
          echo Compare from commitHash $lastCommit
          
          mkdir changed-sources
          sfdx sgd:source:delta --to $CI_COMMIT_SHA --from $lastCommit --output changed-sources/ --generate-delta --include .include
          
          if ( grep -q '<types>' ./changed-sources/package/package.xml ) || ( grep -q '<types>' ./changed-sources/destructiveChanges/destructiveChanges.xml ); then
            echo "---- Changes detected ----"
          else
            echo "---- No changes to validate ----"
            exit 0
          fi
      - name: 'Display structure of changed-sources folder'
        run: |
          ls -R changed-sources
      - name: 'Populate auth file with SFDX_AUTH_URL secret'
        run: |
          sfdx_auth_url_value=${{ secrets[format('SFDX_AUTH_URL_{0}', env.CI_COMMIT_BRANCH )] }}

          if [ -z "$sfdx_auth_url_value" ]; then
           echo "---- Missing sfdx_auth_url_$CI_COMMIT_BRANCH value from CI/CD variables ----"
           exit 1
          fi
          echo $sfdx_auth_url_value > ./env.sfdx
          echo "---- Auth file populated with sfdx_auth_url_$CI_COMMIT_BRANCH secret----"
      - name: 'Authenticate to Org'
        run:  sfdx org:login:sfdx-url --sfdx-url-file ./env.sfdx --set-default
      - name: 'Deploy to Org'
        run: |
          testLevel=$TEST_LEVEL
          if [ -z "$testLevel" ]; then
            testLevel="RunAllTestsInOrg"
          fi
          echo "---- Test Level: $testLevel ----"
          
          sfdx project:deploy:start \
            --manifest ./changed-sources/package/package.xml \
            --post-destructive-changes ./changed-sources/destructiveChanges/destructiveChanges.xml \
            --ignore-warnings \
            --test-level $testLevel \
            --async \
            --ignore-conflicts \
            --json | tee deploy_result.json
          
          resultId=$(cat deploy_result.json | jq --raw-output '.result.id')
          if [ -z "$resultId" -o "$resultId" = "null" ]; then
            echo "---- Missing deploy result ID ----"
            exit 1
          fi
          echo "---- Deploy result ----"
          sfdx project:deploy:resume --job-id $resultId
  Tagging:
    needs: Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ github.token }}
          custom_tag: _deploy_${{ github.sha }}
          tag_prefix: tag-${{ github.ref_name }}